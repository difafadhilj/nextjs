{"ast":null,"code":"var _jsxFileName = \"/home/dfjknight/Documents/nextjs-master/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport './pages/_app';\nimport Link from \"next/link\";\n\nfunction Blog({\n  data\n}) {\n  let no = 1;\n  return __jsx(\"table\", {\n    class: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"No\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Name\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Email\")), data.map(post => __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, no++), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, post.first, \" \", post.last), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, post.email)))));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get data.\n  // You can use any data fetching library\n  const res = await fetch(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\");\n  const data = await res.json(); // By returning { props: data }, the Blog component\n  // will receive `data` as a prop at build time\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["/home/dfjknight/Documents/nextjs-master/pages/index.js"],"names":["React","Component","fetch","Link","Blog","data","no","map","post","first","last","email","getStaticProps","res","json","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACtB,MAAIC,EAAE,GAAG,CAAT;AACA,SACE;AAAO,IAAA,KAAK,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,EAOID,IAAI,CAACE,GAAL,CAAUC,IAAD,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,EAAE,EAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,IAAI,CAACC,KAAV,OAAkBD,IAAI,CAACE,IAAvB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,KAAV,CAHF,CADF,CADF,CAPJ,CADF;AAqBD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,yEAAD,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMQ,GAAG,CAACC,IAAJ,EAAnB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport './pages/_app'\nimport Link from \"next/link\"\n\nfunction Blog({ data }) {\n  let no = 1;\n  return (\n    <table class=\"table table-bordered\">\n      <tr>\n        <th>No</th>\n        <th>Name</th>\n        <th>Email</th>\n      </tr>\n      {\n        data.map((post) => (\n          <tr>\n            <>\n              <td>{no++}</td>\n              <td>{post.first} {post.last}</td>\n              <td>{post.email}</td>\n            </>\n          </tr>\n        ))\n      }\n    </table >\n\n  )\n}\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n  // Call an external API endpoint to get data.\n  // You can use any data fetching library\n  const res = await fetch(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\n  const data = await res.json()\n\n  // By returning { props: data }, the Blog component\n  // will receive `data` as a prop at build time\n  return {\n    props: {\n      data,\n    },\n  }\n}\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}