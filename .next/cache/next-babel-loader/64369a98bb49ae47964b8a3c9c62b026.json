{"ast":null,"code":"var _jsxFileName = \"/home/dfjknight/Documents/nextjs-master/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Link from \"next/link\";\n\nfunction Blog({\n  data\n}) {\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, data.map(post => __jsx(React.Fragment, null, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, post.first, \" \", post.last), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, post.email))));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get data.\n  // You can use any data fetching library\n  const res = await fetch(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\");\n  const data = await res.json(); // By returning { props: data }, the Blog component\n  // will receive `data` as a prop at build time\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["/home/dfjknight/Documents/nextjs-master/pages/index.js"],"names":["React","Component","fetch","Link","Blog","data","map","post","first","last","email","getStaticProps","res","json","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACtB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,GAAL,CAAUC,IAAD,IACR,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,OAAkBD,IAAI,CAACE,IAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,KAAV,CAFF,CADD,CADH,CADF;AAUD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,yEAAD,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMO,GAAG,CAACC,IAAJ,EAAnB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLT,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Link from \"next/link\"\n\nfunction Blog({ data }) {\n  return (\n    <ul>\n      {data.map((post) => (\n        <>\n          <li>{post.first} {post.last}</li>\n          <li>{post.email}</li>\n        </>\n      ))}\n    </ul>\n  )\n}\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport async function getStaticProps() {\n  // Call an external API endpoint to get data.\n  // You can use any data fetching library\n  const res = await fetch(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\")\n  const data = await res.json()\n\n  // By returning { props: data }, the Blog component\n  // will receive `data` as a prop at build time\n  return {\n    props: {\n      data,\n    },\n  }\n}\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}